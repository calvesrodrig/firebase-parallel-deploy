
name: Deploy

on:
  workflow_dispatch:
  pull_request:
    branches:
      - master
    types: [closed]

env:
  PROJECT: ${{ secrets.PROJECT_ID_TEST }}
  BRANCH: ${{ github.event.pull_request.head.ref }}
  FUNCTIONS_PATH: deploy-functions

jobs:
  get_functions:
    runs-on: ubuntu-latest
    outputs:
      functions: ${{ steps.get-functions.outputs.functions }}
    steps:
      - uses: actions/checkout@v3

      - name: Install script dependencies
        working-directory: ./.github/scripts
        run: npm install

      - name: echo branch
        shell: bash
        run: echo ${BRANCH}

      - name: Create functions folder
        working-directory: ./.github/scripts
        run: mkdir ${FUNCTIONS_PATH}

      - name: Download artifact
        working-directory: ./.github/scripts
        env:
          BRANCH: ${{ env.BRANCH }}
          REPOSITORY: ${{ github.repository }}
          FUNCTIONS_PATH: ${{ env.FUNCTIONS_PATH }}
          TOKEN: ${{ secrets.ACCESS_TOKEN }}
        run: node getArtifacts.js

      - name: Check folder
        shell: bash
        working-directory: ./.github/scripts
        run: cd ${FUNCTIONS_PATH} && ls -R

      - name: Remove branch invalid char
        shell: bash
        run: |
          RENAMED_BRANCH="${BRANCH////$'-'}"
          echo "RENAMED_BRANCH=$RENAMED_BRANCH" >> $GITHUB_ENV

      - name: Add functions array to output
        id: get-functions
        run: |
          FUNCTIONS=$(echo $(cat .github/scripts/${FUNCTIONS_PATH}/functions-${{ env.RENAMED_BRANCH }}.json) | sed 's/ //g' )
          echo "::set-output name=functions::$FUNCTIONS"

  deploy:
    runs-on: ubuntu-latest
    needs: [get_functions]
    strategy:
      matrix:
        function: ${{ fromJson(needs.get_functions.outputs.functions) }}
    steps:
      - name: Print
        run: echo ${{ matrix.function }}